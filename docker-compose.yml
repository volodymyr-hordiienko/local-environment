name: "local-environment"
services:
  traefik:
    container_name: "local.traefik"
    hostname: "local.traefik"
    image: traefik:3.2.1
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      local-network:
        ipv4_address: 42.89.0.2

  redis:
    container_name: "local.redis"
    hostname: "local.redis"
    image: redis:7.4.1
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/bridge:/bridge
    networks:
      local-network:
        ipv4_address: 42.89.0.3

  mysql:
    container_name: "local.mysql"
    hostname: "local.mysql"
    image: mysql:9.1
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/bridge:/bridge
    networks:
      local-network:
        ipv4_address: 42.89.0.4

  postgres:
    container_name: "local.postgres"
    hostname: "local.postgres"
    image: postgres:17.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/bridge:/bridge
    networks:
      local-network:
        ipv4_address: 42.89.0.5

  adminer:
    container_name: "local.adminer"
    hostname: "local.adminer"
    image: adminer:4.8.1
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.local`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    networks:
      local-network:
        ipv4_address: 42.89.0.6

  mailpit:
    container_name: "local.mailpit"
    hostname: "local.mailpit"
    image: axllent/mailpit:v1.21.5
    restart: unless-stopped
    ports:
      - "1025:1025"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.rule=Host(`mailpit.local`)"
      - "traefik.http.services.mailpit.loadbalancer.server.port=8025"
    networks:
      local-network:
        ipv4_address: 42.89.0.7

  minio:
    container_name: "local.minio"
    hostname: "local.minio"
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio/data:/data
    command: server /data --console-address ":9001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.local`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
    networks:
      local-network:
        ipv4_address: 42.89.0.8

  sonarqube:
    container_name: "local.sonarqube"
    hostname: "local.sonarqube"
    image: sonarqube:latest
    restart: unless-stopped
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://local.postgres:5432/${SONARQUBE_JDBC_DATABASE}
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/logs:/opt/sonarqube/logs
    ports:
      - "9090:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`sonarqube.local`)"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
    networks:
      local-network:
        ipv4_address: 42.89.0.9

networks:
  local-network:
    driver: bridge
    ipam:
      config:
        - subnet: 42.89.0.0/16